version: '3.4'
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - './env/env.hydra'
    restart: always
    volumes:
      - ./hydra:/home/hydra
      # map node_modules to a persistent volume
      - ./data/node_modules:/home/hydra/node_modules
      # map in various bash scripts
      - ./scripts:/home/hydra/scripts
      # map in various persistent directories in the data folder
      - ./data/logs:/home/hydra/log
      - ./data/pdf:/home/hydra/tmp/pdf
      - ./data/thumbnails:/home/hydra/tmp/thumbnails
      - ./data/images:/home/hydra/tmp/images
      # map in various persistent directories in the tmp folder
      - ./data/imports:/home/hydra/tmp/imports
      - ./data/exports:/home/hydra/tmp/exports
      - ./data/validations:/home/hydra/tmp/validations
      # don't mount tmp directory
      - /home/hydra/tmp
    networks:
      - hydra

  web:
    extends: app
    container_name: acda_portal
    command: bash -c "bundle install; sh ./scripts/startup.sh"
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - solr
      - fcrepo
      - db
      - workers
    networks:
      - hydra

  workers:
    extends: app
    container_name: sidekiq
    command: bash -c "bundle install; bundle exec sidekiq -C config/sidekiq.yml"
    depends_on:
      - redis
      - solr
      - fcrepo
      - memcached
      - db
    stdin_open: true
    tty: true
    networks:
      - hydra

  memcached:
    image: bitnami/memcached
    container_name: memcached
    ports:
      - "11211"
    networks:
      - hydra

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server    
    # command: redis-server /usr/local/etc/redis/redis.conf    
    ports:
      - "127.0.0.1:6379:6379"
    env_file:
      - './env/env.redis'
    volumes:
      - ./data/redis:/var/lib/redis/data
      # - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: redis-cli -h localhost -p 6379 -a $$REDIS_PASSWORD ping
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - hydra

  fcrepo:
    image: fcrepo/fcrepo:6.5.1-tomcat9
    container_name: fcrepo
    command: bash -c "/usr/local/tomcat/bin/catalina.sh run"  
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - './env/env.fedora' 
    volumes:
      - ./data/logs/fcrepo:/usr/local/tomcat/log   
      - ./data/fcrepo:/usr/local/tomcat/fcrepo-home  
    logging:
      options:
        max-size: 50m
    healthcheck:
      test: "curl -f http://localhost:8080/fcrepo"
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      - db      
    networks:
      - hydra       

  solr:
    container_name: solr
    image: solr:9.8.0
    restart: on-failure
    env_file:
      - './env/env.solr'
    ports:
      - "8983:8983"
    user: root # run as root to change the permissions of the solr folder
    # Change permissions of the solr folder, create a default core and start solr as solr user
    command: bash -c "sh /scripts/startup.sh hydra_prod"
    volumes:
      - ./data/solr:/var/solr/data/hydra_prod/data
      - ./data/logs/dev/:/var/solr/logs
      - ./solr9-setup:/solr9-setup
      - ./scripts/startup-solr.sh:/scripts/startup.sh
    healthcheck:
      test: "curl -f localhost:8983/solr/#/"
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - hydra

  db:
    container_name: db
    image: postgres:16-alpine
    ports:
      - "5432"
    env_file:
      - './env/env.db'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "fcrepo"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - hydra

networks:
  hydra:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-hydra-ca
