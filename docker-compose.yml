version: '3.4'
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - './env/env.hydra'
    volumes:
      - ./hydra:/home/hydra
      - ./solr:/home/hydra/solr
      - ./data/logs:/home/hydra/log
      - ./scripts:/home/hydra/scripts
      - ./tmp/imports:/home/hydra/tmp/imports
      - ./tmp/exports:/home/hydra/tmp/exports
      - ./data/pdf:/home/hydra/tmp/pdf
      - ./data/thumbnails:/home/hydra/tmp/thumbnails
      - ./data/images:/home/hydra/tmp/images
      - ./data/node_modules:/home/hydra/node_modules
      - /home/hydra/tmp # don't mount tmp directory
    networks:
      - hydra

  web:
    extends: app
    container_name: acda_portal_public
    # command: bash -c "bundle install; service cron start; gem install whenever; whenever --update-crontab; bundle exec rails s -p 3000 -b 0.0.0.0"
    command: bash -c "bundle install; sh ./scripts/startup.sh"  
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - solr
      - fcrepo
      - db
      - workers

  workers:
    extends: app
    container_name: sidekiq
    command: bash -c "bundle install; bundle exec sidekiq -C config/sidekiq.yml"
    depends_on:
      - redis
      - solr
      - fcrepo
      - memcached
      - db
    stdin_open: true
    tty: true

  memcached:
    image: bitnami/memcached
    container_name: memcached
    ports:
      - "11211"
    networks:
      - hydra

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server
    ports:
      - "127.0.0.1:6379:6379"
    env_file:
      - './env/env.redis'
    volumes:
      - ./data/redis:/var/lib/redis/data
    restart: unless-stopped
    healthcheck:
      test: redis-cli -h redis ping
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - hydra

  fcrepo:
    image: ghcr.io/scientist-softserv/docker-fcrepo:4.7.6-SNAPSHOT2
    container_name: fcrepo
    depends_on:
      - db
    env_file:
      - './env/env.fedora'
    ports:
      - "8080:8080"
    volumes:
      - ./data/fcrepo:/data:cached      
    networks:
      - hydra 

  solr:
    image: solr:8.11.1
    container_name: solr
    restart: on-failure
    env_file:
      - './env/env.solr'
    ports:
      - 8983:8983
    user: root # run as root to change the permissions of the solr folder
    # Change permissions of the solr folder, create a default core and start solr as solr user
    command: bash -c "
      chown -R 8983:8983 /var/solr
      && runuser -u solr -- solr-precreate hydra_prod /opt/solr/server/configsets/hydraconf"
    volumes:
      - ./solr/conf:/opt/solr/server/configsets/hydraconf
      - ./data/solr:/var/solr/data:cached
      - ./data/logs/prod/:/var/solr/logs
    healthcheck:
      test: "curl -f http://localhost:8983/solr/#/"
      interval: 5s
      timeout: 5s
      retries: 20       
    networks:
      - hydra

  db:
    container_name: db
    image: postgres:16-alpine	
    ports:
      - "5432"
    env_file:
      - './env/env.db'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - hydra

networks:
  hydra:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-hydra-bridge
