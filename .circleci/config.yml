version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/ruby:3.3.5-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      
      - image: postgres:16-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circleci
      
      - image: redis:alpine
      
      - image: solr:9.8.0
        environment:
          SOLR_HEAP: "512m"
          SOLR_PORT: 8983
      
      - image: fcrepo/fcrepo:6.5.1-tomcat9
      
      - image: bitnami/memcached
        environment:
          MEMCACHED_PORT: 11211

    steps:
      - checkout
      
      - setup_remote_docker
      
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "hydra/Gemfile.lock" }}
            - v1-dependencies-
      
      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client
      
      - run:
          name: Bundle Install
          command: |
            cd hydra
            gem install bundler
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
      
      - save_cache:
          paths:
            - ./hydra/vendor/bundle
          key: v1-dependencies-{{ checksum "hydra/Gemfile.lock" }}
      
      - run:
          name: Wait for Services
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 1m
            dockerize -wait tcp://localhost:6379 -timeout 1m
            dockerize -wait tcp://localhost:8983 -timeout 1m
            dockerize -wait tcp://localhost:8080 -timeout 1m
      
      - run:
          name: Setup Database
          command: |
            cd hydra
            bundle exec rake db:create db:schema:load
      
      - run:
          name: Run Tests
          command: |
            cd hydra
            bundle exec rspec

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test